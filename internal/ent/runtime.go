// Code generated by ent, DO NOT EDIT.

package ent

import (
	"learning-french-service/internal/ent/deck"
	"learning-french-service/internal/ent/learningstreak"
	"learning-french-service/internal/ent/pronunciationattempt"
	"learning-french-service/internal/ent/question"
	"learning-french-service/internal/ent/questionattempt"
	"learning-french-service/internal/ent/questionreview"
	"learning-french-service/internal/ent/schema"
	"learning-french-service/internal/ent/user"
	"learning-french-service/internal/ent/userstats"
	"learning-french-service/internal/ent/word"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	deckFields := schema.Deck{}.Fields()
	_ = deckFields
	// deckDescName is the schema descriptor for name field.
	deckDescName := deckFields[0].Descriptor()
	// deck.NameValidator is a validator for the "name" field. It is called by the builders before save.
	deck.NameValidator = func() func(string) error {
		validators := deckDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// deckDescCategory is the schema descriptor for category field.
	deckDescCategory := deckFields[2].Descriptor()
	// deck.CategoryValidator is a validator for the "category" field. It is called by the builders before save.
	deck.CategoryValidator = deckDescCategory.Validators[0].(func(string) error)
	// deckDescTargetLevel is the schema descriptor for target_level field.
	deckDescTargetLevel := deckFields[3].Descriptor()
	// deck.TargetLevelValidator is a validator for the "target_level" field. It is called by the builders before save.
	deck.TargetLevelValidator = deckDescTargetLevel.Validators[0].(func(string) error)
	// deckDescIsActive is the schema descriptor for is_active field.
	deckDescIsActive := deckFields[4].Descriptor()
	// deck.DefaultIsActive holds the default value on creation for the is_active field.
	deck.DefaultIsActive = deckDescIsActive.Default.(bool)
	// deckDescWordCount is the schema descriptor for word_count field.
	deckDescWordCount := deckFields[5].Descriptor()
	// deck.DefaultWordCount holds the default value on creation for the word_count field.
	deck.DefaultWordCount = deckDescWordCount.Default.(int)
	// deckDescCreatedAt is the schema descriptor for created_at field.
	deckDescCreatedAt := deckFields[6].Descriptor()
	// deck.DefaultCreatedAt holds the default value on creation for the created_at field.
	deck.DefaultCreatedAt = deckDescCreatedAt.Default.(func() time.Time)
	// deckDescUpdatedAt is the schema descriptor for updated_at field.
	deckDescUpdatedAt := deckFields[7].Descriptor()
	// deck.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	deck.DefaultUpdatedAt = deckDescUpdatedAt.Default.(func() time.Time)
	// deck.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	deck.UpdateDefaultUpdatedAt = deckDescUpdatedAt.UpdateDefault.(func() time.Time)
	learningstreakFields := schema.LearningStreak{}.Fields()
	_ = learningstreakFields
	// learningstreakDescStartDate is the schema descriptor for start_date field.
	learningstreakDescStartDate := learningstreakFields[0].Descriptor()
	// learningstreak.DefaultStartDate holds the default value on creation for the start_date field.
	learningstreak.DefaultStartDate = learningstreakDescStartDate.Default.(func() time.Time)
	// learningstreakDescStreakLength is the schema descriptor for streak_length field.
	learningstreakDescStreakLength := learningstreakFields[2].Descriptor()
	// learningstreak.DefaultStreakLength holds the default value on creation for the streak_length field.
	learningstreak.DefaultStreakLength = learningstreakDescStreakLength.Default.(int)
	// learningstreakDescIsCurrent is the schema descriptor for is_current field.
	learningstreakDescIsCurrent := learningstreakFields[3].Descriptor()
	// learningstreak.DefaultIsCurrent holds the default value on creation for the is_current field.
	learningstreak.DefaultIsCurrent = learningstreakDescIsCurrent.Default.(bool)
	// learningstreakDescCreatedAt is the schema descriptor for created_at field.
	learningstreakDescCreatedAt := learningstreakFields[4].Descriptor()
	// learningstreak.DefaultCreatedAt holds the default value on creation for the created_at field.
	learningstreak.DefaultCreatedAt = learningstreakDescCreatedAt.Default.(func() time.Time)
	pronunciationattemptFields := schema.PronunciationAttempt{}.Fields()
	_ = pronunciationattemptFields
	// pronunciationattemptDescUserAudioURL is the schema descriptor for user_audio_url field.
	pronunciationattemptDescUserAudioURL := pronunciationattemptFields[0].Descriptor()
	// pronunciationattempt.UserAudioURLValidator is a validator for the "user_audio_url" field. It is called by the builders before save.
	pronunciationattempt.UserAudioURLValidator = func() func(string) error {
		validators := pronunciationattemptDescUserAudioURL.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(user_audio_url string) error {
			for _, fn := range fns {
				if err := fn(user_audio_url); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// pronunciationattemptDescReferenceAudioURL is the schema descriptor for reference_audio_url field.
	pronunciationattemptDescReferenceAudioURL := pronunciationattemptFields[1].Descriptor()
	// pronunciationattempt.ReferenceAudioURLValidator is a validator for the "reference_audio_url" field. It is called by the builders before save.
	pronunciationattempt.ReferenceAudioURLValidator = pronunciationattemptDescReferenceAudioURL.Validators[0].(func(string) error)
	// pronunciationattemptDescAttemptDate is the schema descriptor for attempt_date field.
	pronunciationattemptDescAttemptDate := pronunciationattemptFields[5].Descriptor()
	// pronunciationattempt.DefaultAttemptDate holds the default value on creation for the attempt_date field.
	pronunciationattempt.DefaultAttemptDate = pronunciationattemptDescAttemptDate.Default.(func() time.Time)
	questionFields := schema.Question{}.Fields()
	_ = questionFields
	// questionDescQuestionType is the schema descriptor for question_type field.
	questionDescQuestionType := questionFields[0].Descriptor()
	// question.QuestionTypeValidator is a validator for the "question_type" field. It is called by the builders before save.
	question.QuestionTypeValidator = func() func(string) error {
		validators := questionDescQuestionType.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(question_type string) error {
			for _, fn := range fns {
				if err := fn(question_type); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// questionDescQuestionText is the schema descriptor for question_text field.
	questionDescQuestionText := questionFields[1].Descriptor()
	// question.QuestionTextValidator is a validator for the "question_text" field. It is called by the builders before save.
	question.QuestionTextValidator = questionDescQuestionText.Validators[0].(func(string) error)
	// questionDescCorrectAnswer is the schema descriptor for correct_answer field.
	questionDescCorrectAnswer := questionFields[2].Descriptor()
	// question.CorrectAnswerValidator is a validator for the "correct_answer" field. It is called by the builders before save.
	question.CorrectAnswerValidator = questionDescCorrectAnswer.Validators[0].(func(string) error)
	// questionDescDifficultyLevel is the schema descriptor for difficulty_level field.
	questionDescDifficultyLevel := questionFields[3].Descriptor()
	// question.DifficultyLevelValidator is a validator for the "difficulty_level" field. It is called by the builders before save.
	question.DifficultyLevelValidator = questionDescDifficultyLevel.Validators[0].(func(string) error)
	// questionDescGeneratedAt is the schema descriptor for generated_at field.
	questionDescGeneratedAt := questionFields[4].Descriptor()
	// question.DefaultGeneratedAt holds the default value on creation for the generated_at field.
	question.DefaultGeneratedAt = questionDescGeneratedAt.Default.(func() time.Time)
	// questionDescIsActive is the schema descriptor for is_active field.
	questionDescIsActive := questionFields[5].Descriptor()
	// question.DefaultIsActive holds the default value on creation for the is_active field.
	question.DefaultIsActive = questionDescIsActive.Default.(bool)
	questionattemptFields := schema.QuestionAttempt{}.Fields()
	_ = questionattemptFields
	// questionattemptDescAiGrade is the schema descriptor for ai_grade field.
	questionattemptDescAiGrade := questionattemptFields[1].Descriptor()
	// questionattempt.AiGradeValidator is a validator for the "ai_grade" field. It is called by the builders before save.
	questionattempt.AiGradeValidator = questionattemptDescAiGrade.Validators[0].(func(string) error)
	// questionattemptDescWasCorrect is the schema descriptor for was_correct field.
	questionattemptDescWasCorrect := questionattemptFields[6].Descriptor()
	// questionattempt.DefaultWasCorrect holds the default value on creation for the was_correct field.
	questionattempt.DefaultWasCorrect = questionattemptDescWasCorrect.Default.(bool)
	// questionattemptDescNeedsRepeat is the schema descriptor for needs_repeat field.
	questionattemptDescNeedsRepeat := questionattemptFields[7].Descriptor()
	// questionattempt.DefaultNeedsRepeat holds the default value on creation for the needs_repeat field.
	questionattempt.DefaultNeedsRepeat = questionattemptDescNeedsRepeat.Default.(bool)
	// questionattemptDescAttemptDate is the schema descriptor for attempt_date field.
	questionattemptDescAttemptDate := questionattemptFields[8].Descriptor()
	// questionattempt.DefaultAttemptDate holds the default value on creation for the attempt_date field.
	questionattempt.DefaultAttemptDate = questionattemptDescAttemptDate.Default.(func() time.Time)
	questionreviewFields := schema.QuestionReview{}.Fields()
	_ = questionreviewFields
	// questionreviewDescEaseFactor is the schema descriptor for ease_factor field.
	questionreviewDescEaseFactor := questionreviewFields[0].Descriptor()
	// questionreview.DefaultEaseFactor holds the default value on creation for the ease_factor field.
	questionreview.DefaultEaseFactor = questionreviewDescEaseFactor.Default.(float64)
	// questionreviewDescIntervalDays is the schema descriptor for interval_days field.
	questionreviewDescIntervalDays := questionreviewFields[1].Descriptor()
	// questionreview.DefaultIntervalDays holds the default value on creation for the interval_days field.
	questionreview.DefaultIntervalDays = questionreviewDescIntervalDays.Default.(int)
	// questionreviewDescRepetitionCount is the schema descriptor for repetition_count field.
	questionreviewDescRepetitionCount := questionreviewFields[2].Descriptor()
	// questionreview.DefaultRepetitionCount holds the default value on creation for the repetition_count field.
	questionreview.DefaultRepetitionCount = questionreviewDescRepetitionCount.Default.(int)
	// questionreviewDescNextReviewDate is the schema descriptor for next_review_date field.
	questionreviewDescNextReviewDate := questionreviewFields[3].Descriptor()
	// questionreview.DefaultNextReviewDate holds the default value on creation for the next_review_date field.
	questionreview.DefaultNextReviewDate = questionreviewDescNextReviewDate.Default.(func() time.Time)
	// questionreviewDescIsDue is the schema descriptor for is_due field.
	questionreviewDescIsDue := questionreviewFields[5].Descriptor()
	// questionreview.DefaultIsDue holds the default value on creation for the is_due field.
	questionreview.DefaultIsDue = questionreviewDescIsDue.Default.(bool)
	// questionreviewDescTotalAttempts is the schema descriptor for total_attempts field.
	questionreviewDescTotalAttempts := questionreviewFields[6].Descriptor()
	// questionreview.DefaultTotalAttempts holds the default value on creation for the total_attempts field.
	questionreview.DefaultTotalAttempts = questionreviewDescTotalAttempts.Default.(int)
	// questionreviewDescCorrectAttempts is the schema descriptor for correct_attempts field.
	questionreviewDescCorrectAttempts := questionreviewFields[7].Descriptor()
	// questionreview.DefaultCorrectAttempts holds the default value on creation for the correct_attempts field.
	questionreview.DefaultCorrectAttempts = questionreviewDescCorrectAttempts.Default.(int)
	// questionreviewDescAccuracyRate is the schema descriptor for accuracy_rate field.
	questionreviewDescAccuracyRate := questionreviewFields[8].Descriptor()
	// questionreview.DefaultAccuracyRate holds the default value on creation for the accuracy_rate field.
	questionreview.DefaultAccuracyRate = questionreviewDescAccuracyRate.Default.(float64)
	// questionreviewDescCreatedAt is the schema descriptor for created_at field.
	questionreviewDescCreatedAt := questionreviewFields[9].Descriptor()
	// questionreview.DefaultCreatedAt holds the default value on creation for the created_at field.
	questionreview.DefaultCreatedAt = questionreviewDescCreatedAt.Default.(func() time.Time)
	// questionreviewDescUpdatedAt is the schema descriptor for updated_at field.
	questionreviewDescUpdatedAt := questionreviewFields[10].Descriptor()
	// questionreview.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	questionreview.DefaultUpdatedAt = questionreviewDescUpdatedAt.Default.(func() time.Time)
	// questionreview.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	questionreview.UpdateDefaultUpdatedAt = questionreviewDescUpdatedAt.UpdateDefault.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[0].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = func() func(string) error {
		validators := userDescEmail.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(email string) error {
			for _, fn := range fns {
				if err := fn(email); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescPasswordHash is the schema descriptor for password_hash field.
	userDescPasswordHash := userFields[1].Descriptor()
	// user.PasswordHashValidator is a validator for the "password_hash" field. It is called by the builders before save.
	user.PasswordHashValidator = func() func(string) error {
		validators := userDescPasswordHash.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(password_hash string) error {
			for _, fn := range fns {
				if err := fn(password_hash); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[2].Descriptor()
	// user.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	user.UsernameValidator = userDescUsername.Validators[0].(func(string) error)
	// userDescFirstName is the schema descriptor for first_name field.
	userDescFirstName := userFields[3].Descriptor()
	// user.FirstNameValidator is a validator for the "first_name" field. It is called by the builders before save.
	user.FirstNameValidator = userDescFirstName.Validators[0].(func(string) error)
	// userDescLastName is the schema descriptor for last_name field.
	userDescLastName := userFields[4].Descriptor()
	// user.LastNameValidator is a validator for the "last_name" field. It is called by the builders before save.
	user.LastNameValidator = userDescLastName.Validators[0].(func(string) error)
	// userDescCurrentLevel is the schema descriptor for current_level field.
	userDescCurrentLevel := userFields[5].Descriptor()
	// user.CurrentLevelValidator is a validator for the "current_level" field. It is called by the builders before save.
	user.CurrentLevelValidator = userDescCurrentLevel.Validators[0].(func(string) error)
	// userDescTargetLevel is the schema descriptor for target_level field.
	userDescTargetLevel := userFields[6].Descriptor()
	// user.TargetLevelValidator is a validator for the "target_level" field. It is called by the builders before save.
	user.TargetLevelValidator = userDescTargetLevel.Validators[0].(func(string) error)
	// userDescDailyGoal is the schema descriptor for daily_goal field.
	userDescDailyGoal := userFields[7].Descriptor()
	// user.DefaultDailyGoal holds the default value on creation for the daily_goal field.
	user.DefaultDailyGoal = userDescDailyGoal.Default.(int)
	// userDescTimezone is the schema descriptor for timezone field.
	userDescTimezone := userFields[8].Descriptor()
	// user.DefaultTimezone holds the default value on creation for the timezone field.
	user.DefaultTimezone = userDescTimezone.Default.(string)
	// user.TimezoneValidator is a validator for the "timezone" field. It is called by the builders before save.
	user.TimezoneValidator = userDescTimezone.Validators[0].(func(string) error)
	// userDescIsActive is the schema descriptor for is_active field.
	userDescIsActive := userFields[10].Descriptor()
	// user.DefaultIsActive holds the default value on creation for the is_active field.
	user.DefaultIsActive = userDescIsActive.Default.(bool)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[11].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[12].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	userstatsFields := schema.UserStats{}.Fields()
	_ = userstatsFields
	// userstatsDescStatDate is the schema descriptor for stat_date field.
	userstatsDescStatDate := userstatsFields[0].Descriptor()
	// userstats.DefaultStatDate holds the default value on creation for the stat_date field.
	userstats.DefaultStatDate = userstatsDescStatDate.Default.(func() time.Time)
	// userstatsDescQuestionsAnswered is the schema descriptor for questions_answered field.
	userstatsDescQuestionsAnswered := userstatsFields[1].Descriptor()
	// userstats.DefaultQuestionsAnswered holds the default value on creation for the questions_answered field.
	userstats.DefaultQuestionsAnswered = userstatsDescQuestionsAnswered.Default.(int)
	// userstatsDescQuestionsCorrect is the schema descriptor for questions_correct field.
	userstatsDescQuestionsCorrect := userstatsFields[2].Descriptor()
	// userstats.DefaultQuestionsCorrect holds the default value on creation for the questions_correct field.
	userstats.DefaultQuestionsCorrect = userstatsDescQuestionsCorrect.Default.(int)
	// userstatsDescWordsLearned is the schema descriptor for words_learned field.
	userstatsDescWordsLearned := userstatsFields[3].Descriptor()
	// userstats.DefaultWordsLearned holds the default value on creation for the words_learned field.
	userstats.DefaultWordsLearned = userstatsDescWordsLearned.Default.(int)
	// userstatsDescTotalStudyTimeMinutes is the schema descriptor for total_study_time_minutes field.
	userstatsDescTotalStudyTimeMinutes := userstatsFields[4].Descriptor()
	// userstats.DefaultTotalStudyTimeMinutes holds the default value on creation for the total_study_time_minutes field.
	userstats.DefaultTotalStudyTimeMinutes = userstatsDescTotalStudyTimeMinutes.Default.(int)
	// userstatsDescStreakDays is the schema descriptor for streak_days field.
	userstatsDescStreakDays := userstatsFields[5].Descriptor()
	// userstats.DefaultStreakDays holds the default value on creation for the streak_days field.
	userstats.DefaultStreakDays = userstatsDescStreakDays.Default.(int)
	// userstatsDescEnglishToFrenchAccuracy is the schema descriptor for english_to_french_accuracy field.
	userstatsDescEnglishToFrenchAccuracy := userstatsFields[6].Descriptor()
	// userstats.DefaultEnglishToFrenchAccuracy holds the default value on creation for the english_to_french_accuracy field.
	userstats.DefaultEnglishToFrenchAccuracy = userstatsDescEnglishToFrenchAccuracy.Default.(float64)
	// userstatsDescFrenchToEnglishAccuracy is the schema descriptor for french_to_english_accuracy field.
	userstatsDescFrenchToEnglishAccuracy := userstatsFields[7].Descriptor()
	// userstats.DefaultFrenchToEnglishAccuracy holds the default value on creation for the french_to_english_accuracy field.
	userstats.DefaultFrenchToEnglishAccuracy = userstatsDescFrenchToEnglishAccuracy.Default.(float64)
	// userstatsDescPronunciationAccuracy is the schema descriptor for pronunciation_accuracy field.
	userstatsDescPronunciationAccuracy := userstatsFields[8].Descriptor()
	// userstats.DefaultPronunciationAccuracy holds the default value on creation for the pronunciation_accuracy field.
	userstats.DefaultPronunciationAccuracy = userstatsDescPronunciationAccuracy.Default.(float64)
	// userstatsDescAverageResponseTimeMs is the schema descriptor for average_response_time_ms field.
	userstatsDescAverageResponseTimeMs := userstatsFields[9].Descriptor()
	// userstats.DefaultAverageResponseTimeMs holds the default value on creation for the average_response_time_ms field.
	userstats.DefaultAverageResponseTimeMs = userstatsDescAverageResponseTimeMs.Default.(int)
	// userstatsDescWordsPerMinute is the schema descriptor for words_per_minute field.
	userstatsDescWordsPerMinute := userstatsFields[10].Descriptor()
	// userstats.DefaultWordsPerMinute holds the default value on creation for the words_per_minute field.
	userstats.DefaultWordsPerMinute = userstatsDescWordsPerMinute.Default.(float64)
	// userstatsDescCreatedAt is the schema descriptor for created_at field.
	userstatsDescCreatedAt := userstatsFields[14].Descriptor()
	// userstats.DefaultCreatedAt holds the default value on creation for the created_at field.
	userstats.DefaultCreatedAt = userstatsDescCreatedAt.Default.(func() time.Time)
	// userstatsDescUpdatedAt is the schema descriptor for updated_at field.
	userstatsDescUpdatedAt := userstatsFields[15].Descriptor()
	// userstats.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	userstats.DefaultUpdatedAt = userstatsDescUpdatedAt.Default.(func() time.Time)
	// userstats.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	userstats.UpdateDefaultUpdatedAt = userstatsDescUpdatedAt.UpdateDefault.(func() time.Time)
	wordFields := schema.Word{}.Fields()
	_ = wordFields
	// wordDescFrenchWord is the schema descriptor for french_word field.
	wordDescFrenchWord := wordFields[0].Descriptor()
	// word.FrenchWordValidator is a validator for the "french_word" field. It is called by the builders before save.
	word.FrenchWordValidator = func() func(string) error {
		validators := wordDescFrenchWord.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(french_word string) error {
			for _, fn := range fns {
				if err := fn(french_word); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// wordDescPartOfSpeech is the schema descriptor for part_of_speech field.
	wordDescPartOfSpeech := wordFields[2].Descriptor()
	// word.PartOfSpeechValidator is a validator for the "part_of_speech" field. It is called by the builders before save.
	word.PartOfSpeechValidator = wordDescPartOfSpeech.Validators[0].(func(string) error)
	// wordDescGender is the schema descriptor for gender field.
	wordDescGender := wordFields[3].Descriptor()
	// word.GenderValidator is a validator for the "gender" field. It is called by the builders before save.
	word.GenderValidator = wordDescGender.Validators[0].(func(string) error)
	// wordDescPhoneticTranscription is the schema descriptor for phonetic_transcription field.
	wordDescPhoneticTranscription := wordFields[6].Descriptor()
	// word.PhoneticTranscriptionValidator is a validator for the "phonetic_transcription" field. It is called by the builders before save.
	word.PhoneticTranscriptionValidator = wordDescPhoneticTranscription.Validators[0].(func(string) error)
	// wordDescPronunciationAudioURL is the schema descriptor for pronunciation_audio_url field.
	wordDescPronunciationAudioURL := wordFields[7].Descriptor()
	// word.PronunciationAudioURLValidator is a validator for the "pronunciation_audio_url" field. It is called by the builders before save.
	word.PronunciationAudioURLValidator = wordDescPronunciationAudioURL.Validators[0].(func(string) error)
	// wordDescDifficultyLevel is the schema descriptor for difficulty_level field.
	wordDescDifficultyLevel := wordFields[8].Descriptor()
	// word.DifficultyLevelValidator is a validator for the "difficulty_level" field. It is called by the builders before save.
	word.DifficultyLevelValidator = wordDescDifficultyLevel.Validators[0].(func(string) error)
	// wordDescIsActive is the schema descriptor for is_active field.
	wordDescIsActive := wordFields[11].Descriptor()
	// word.DefaultIsActive holds the default value on creation for the is_active field.
	word.DefaultIsActive = wordDescIsActive.Default.(bool)
	// wordDescCreatedAt is the schema descriptor for created_at field.
	wordDescCreatedAt := wordFields[12].Descriptor()
	// word.DefaultCreatedAt holds the default value on creation for the created_at field.
	word.DefaultCreatedAt = wordDescCreatedAt.Default.(func() time.Time)
	// wordDescUpdatedAt is the schema descriptor for updated_at field.
	wordDescUpdatedAt := wordFields[13].Descriptor()
	// word.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	word.DefaultUpdatedAt = wordDescUpdatedAt.Default.(func() time.Time)
	// word.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	word.UpdateDefaultUpdatedAt = wordDescUpdatedAt.UpdateDefault.(func() time.Time)
}
